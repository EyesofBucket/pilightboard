import os
import time
import serial
import busio
import digitalio
import board
import adafruit_mcp3xxx.mcp3008 as MCP
from multiprocessing import Process
from adafruit_mcp3xxx.analog_in import AnalogIn
##CONNECT TO TEENCY
ser = serial.Serial('/dev/ttyACM0',9600)
spi = busio.SPI(clock=board.SCK, MISO=board.MISO, MOSI=board.MOSI)
cs = digitalio.DigitalInOut(board.D22)
mcp = MCP.MCP3008(spi, cs)
##channels
#chan = AnalogIn(mcp, MCP.P0)
chan0 = AnalogIn(mcp, MCP.P0).value
chan1 = AnalogIn(mcp, MCP.P1).value
chan2 = AnalogIn(mcp, MCP.P2).value
##set vals
raw = 65290
top = 255
chcount = 7
##
ch1 = "1"
ch2 = "2"
ch3 = "3"
ch4 = "4"
ch5 = "5"
ch6 = "6"
ch7 = "7"
##remap
def remap_range(value, left_min, left_max, right_min, right_max):
    left_span = left_max - left_min
    right_span = right_max - right_min
    value_scaled = int(value - left_min) / int(left_span)
    return int(right_min + (value_scaled * right_span))

##while True:
##    
##    ch1 = chan0.value
##    ch1val = remap_range(ch1, 0, raw, 0, top)
##    ch1 = ch1val + 1000
##    ##send serial
##    ser.write(str(ch1).encode())
def loop_0():
    while True:

        val1 = remap_range(chan0, 0, raw, 0, top)        
        ser.write((str(ch1) + str(val1)).encode())
        print("yeet")
def loop_1():
    while True:

        val2 = remap_range(chan1, 0, raw, 0, top)        
        ser.write((str(ch2) + str(val2)).encode())
    
        
if __name__ == '__main__':
    Process(target=loop_0).start()